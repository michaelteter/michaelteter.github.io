I"V<p>This minimal example demonstrates how to fetch all records from a CoreData table.  (It also out of necessity demonstrates how to add records.)</p>

<p><a href="https://github.com/michaelteter/CoreDataSimpleFetch">Example project code</a></p>

<p>Once you have done the essential steps like creating a project with [x] CoreData included, and you have imported CoreData in the code, this is the
basic method of fetching (all rows) from a table:</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kd">func</span> <span class="nf">fetchData</span><span class="p">()</span> <span class="p">{</span>
        <span class="k">let</span> <span class="nv">ad</span>  <span class="o">=</span> <span class="kt">UIApplication</span><span class="o">.</span><span class="n">shared</span><span class="o">.</span><span class="n">delegate</span> <span class="k">as!</span> <span class="kt">AppDelegate</span>
        <span class="k">let</span> <span class="nv">moc</span> <span class="o">=</span> <span class="n">ad</span><span class="o">.</span><span class="n">persistentContainer</span><span class="o">.</span><span class="n">viewContext</span>
        <span class="k">let</span> <span class="nv">fetchReq</span><span class="p">:</span> <span class="kt">NSFetchRequest</span><span class="o">&lt;</span><span class="kt">Person</span><span class="o">&gt;</span> <span class="o">=</span> <span class="kt">NSFetchRequest</span><span class="p">(</span><span class="nv">entityName</span><span class="p">:</span> <span class="s">"Person"</span><span class="p">)</span>
        <span class="n">fetchReq</span><span class="o">.</span><span class="n">sortDescriptors</span> <span class="o">=</span> <span class="p">[</span><span class="kt">NSSortDescriptor</span><span class="p">(</span><span class="nv">key</span><span class="p">:</span> <span class="s">"name"</span><span class="p">,</span> <span class="nv">ascending</span><span class="p">:</span> <span class="kc">true</span><span class="p">)]</span>
        
        <span class="k">do</span> <span class="p">{</span>
            <span class="k">let</span> <span class="nv">fetchResult</span> <span class="o">=</span> <span class="k">try</span> <span class="n">moc</span><span class="o">.</span><span class="nf">fetch</span><span class="p">(</span><span class="n">fetchReq</span> <span class="k">as!</span> <span class="kt">NSFetchRequest</span><span class="o">&lt;</span><span class="kt">NSFetchRequestResult</span><span class="o">&gt;</span><span class="p">)</span> <span class="k">as!</span> <span class="p">[</span><span class="kt">Person</span><span class="p">]</span>
            <span class="k">for</span> <span class="n">r</span> <span class="k">in</span> <span class="n">fetchResult</span> <span class="p">{</span>
                <span class="c1">// do something with each object returned, such as</span>
                <span class="nf">print</span><span class="p">(</span><span class="s">"</span><span class="se">\(</span><span class="n">r</span><span class="o">.</span><span class="n">name</span><span class="o">!</span><span class="se">)</span><span class="s">"</span><span class="p">)</span>
            <span class="p">}</span>
        <span class="p">}</span> <span class="k">catch</span> <span class="p">{</span>
            <span class="k">let</span> <span class="nv">er</span> <span class="o">=</span> <span class="n">error</span> <span class="k">as</span> <span class="kt">NSError</span>
            <span class="c1">// do something with the er (error)</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>
:ET